# CircleCI configuration file to:
#   - Run tests and generate coverage on push events.
#   - Build a release when a new semantic version tag is pushed.
#
# The configuration uses CircleCI's Docker executor with the latest GCC image.
# It installs required dependencies (lcov and genhtml) for coverage reporting.
#
version: 2.1

jobs:
  build_and_test:
    docker:
      - image: cimg/deploy:2025.01 # Use the official CircleCI GCC image
    steps:
      - checkout

      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y lcov libxcb1-dev \
            libxcb-ewmh-dev libcairo-dev libxcb-keysyms1-dev \
            libxcb-util-dev libxcb-icccm4-dev xvfb
      - run:
          name: Clean previous builds
          command: make clean
      - run:
          name: Build Debug and Run Tests
          command: |
            export DISPLAY=:99
            echo "export DISPLAY=:99" >> "$BASH_ENV"
            source "$BASH_ENV"
            sh tests/xvfb.sh -s
            DISPLAY=:99 make
            DISPLAY=:99 make tests
            sh tests/xvfb.sh -c
      - run:
          name: Generate Test Coverage Report
          command: |
            export DISPLAY=:99
            echo "export DISPLAY=:99" >> "$BASH_ENV"
            source "$BASH_ENV"
            sh tests/xvfb.sh -s
            DISPLAY=:99 make test-coverage
            sh tests/xvfb.sh -c
      - store_artifacts:
          path: coverage
          destination: coverage

  build_release:
    docker:
      - image: cimg/deploy:2025.01
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y lcov libxcb1-dev \
            libxcb-ewmh-dev libcairo-dev libxcb-keysyms1-dev \
            libxcb-util-dev libxcb-icccm4-dev xvfb
      - run:
          name: Clean previous builds
          command: make clean
      - run:
          name: Build Release Version
          command: make release
      - store_artifacts:
          path: menu_system
          destination: binary

workflows:
  version: 2
  build_and_release:
    jobs:
      - build_and_test:
          filters:
            tags:
              ignore: /.*/ # Run this job on branch pushes only
      - build_release:
          filters:
            branches:
              ignore: /.*/ # Run this job only on tagged commits
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+$$/
